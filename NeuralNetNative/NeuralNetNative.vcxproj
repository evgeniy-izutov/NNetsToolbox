<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{9D660A70-A7B3-4DCE-9331-F98FAD232665}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>NeuralNetNative</RootNamespace>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>Intel C++ Compiler XE 15.0</PlatformToolset>
    <UseIntelTBB>true</UseIntelTBB>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>Intel C++ Compiler XE 15.0</PlatformToolset>
    <UseIntelTBB>true</UseIntelTBB>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;_USRDLL;NEURALNETNATIVE_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\StandartTypesNative;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>..\x64\Debug;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>StandardTypesNative.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;_WINDOWS;_USRDLL;NEURALNETNATIVE_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>..\StandartTypesNative;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <UseProcessorExtensions>AVX</UseProcessorExtensions>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalLibraryDirectories>..\x64\Release;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>StandardTypesNative.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="ActivationFunction.h" />
    <ClInclude Include="BackPropagationAlgorithm.h" />
    <ClInclude Include="BaseNeuralBlock.h" />
    <ClInclude Include="BinaryBinaryRbm.h" />
    <ClInclude Include="ConstantFactor.h" />
    <ClInclude Include="ContrastiveDivergence.h" />
    <ClInclude Include="EliminationRegularization.h" />
    <ClInclude Include="ExportDll.h" />
    <ClInclude Include="FastPersistentContrastiveDivergence.h" />
    <ClInclude Include="GaussianBinaryRbm.h" />
    <ClInclude Include="GradientFunction.h" />
    <ClInclude Include="GrainSizeForParallel.h" />
    <ClInclude Include="HyperbolicTangensFunction.h" />
    <ClInclude Include="L1Regularization.h" />
    <ClInclude Include="L2Regularization.h" />
    <ClInclude Include="LearnFactorStrategy.h" />
    <ClInclude Include="LinearFactor.h" />
    <ClInclude Include="LinearGradient.h" />
    <ClInclude Include="MultyLayerPerceptron.h" />
    <ClInclude Include="MultyLayerPerceptronFactory.h" />
    <ClInclude Include="NeuralNet.h" />
    <ClInclude Include="NeuralNetFactory.h" />
    <ClInclude Include="NoRegularization.h" />
    <ClInclude Include="RbmGradients.h" />
    <ClInclude Include="Regularization.h" />
    <ClInclude Include="RestrictedBoltzmannMachine.h" />
    <ClInclude Include="RestrictedBoltzmannMachineFactory.h" />
    <ClInclude Include="SigmoidFunction.h" />
    <ClInclude Include="ReverseFactor.h" />
    <ClInclude Include="SimpleNeuronBlock.h" />
    <ClInclude Include="SoftmaxFunction.h" />
    <ClInclude Include="SoftmaxNeuronBlock.h" />
    <ClInclude Include="SqrtReverseFactor.h" />
    <ClInclude Include="TrainMethod.h" />
    <ClInclude Include="TrainProperties.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="BackPropagationAlgorithm.cpp" />
    <ClCompile Include="BaseNeuralBlock.cpp" />
    <ClCompile Include="BinaryBinaryRbm.cpp" />
    <ClCompile Include="ConstantFactor.cpp" />
    <ClCompile Include="ContrastiveDivergence.cpp" />
    <ClCompile Include="EliminationRegularization.cpp" />
    <ClCompile Include="FastPersistentContrastiveDivergence.cpp" />
    <ClCompile Include="GaussianBinaryRbm.cpp" />
    <ClCompile Include="GradientFunction.cpp" />
    <ClCompile Include="HyperbolicTangensFunction.cpp" />
    <ClCompile Include="L1Regularization.cpp" />
    <ClCompile Include="L2Regularization.cpp" />
    <ClCompile Include="LinearFactor.cpp" />
    <ClCompile Include="LinearGradient.cpp" />
    <ClCompile Include="MultyLayerPerceptron.cpp" />
    <ClCompile Include="MultyLayerPerceptronFactory.cpp" />
    <ClCompile Include="NoRegularization.cpp" />
    <ClCompile Include="RbmGradients.cpp" />
    <ClCompile Include="Regularization.cpp" />
    <ClCompile Include="RestrictedBoltzmannMachine.cpp" />
    <ClCompile Include="RestrictedBoltzmannMachineFactory.cpp" />
    <ClCompile Include="SigmoidFunction.cpp" />
    <ClCompile Include="ReverseFactor.cpp" />
    <ClCompile Include="SimpleNeuronBlock.cpp" />
    <ClCompile Include="SoftmaxFunction.cpp" />
    <ClCompile Include="SoftmaxNeuronBlock.cpp" />
    <ClCompile Include="SqrtReverseFactor.cpp" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>