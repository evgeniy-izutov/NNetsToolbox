<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9E493526-5768-4DFF-BC61-AB98FBEFFE2F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>NeuralNet</RootNamespace>
    <AssemblyName>NNetToolbox.NeuralNet</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="MathNet.Numerics">
      <HintPath>..\packages\MathNet.Numerics.3.5.0\lib\net40\MathNet.Numerics.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="ActivationFunctions\HyperbolicTangens.cs" />
    <Compile Include="ActivationFunctions\IActivationFunction.cs" />
    <Compile Include="ActivationFunctions\Sigmoid.cs" />
    <Compile Include="ActivationFunctions\Softmax.cs" />
    <Compile Include="NeuralNets\INeuralNet.cs" />
    <Compile Include="NeuralNets\INeuralNetFactory.cs" />
    <Compile Include="NeuralNets\BlockType\NeuralNetBlocks\SimpleNeuronBlock.cs" />
    <Compile Include="NeuralNets\BlockType\NeuralNetBlocks\SoftmaxSimpleNeuronBlock.cs" />
    <Compile Include="NeuralNets\BlockType\NeuralNetBlocks\StandartNeuronBlock.cs" />
    <Compile Include="NeuralNets\BlockType\MultyLayerPerceptron\Factory\WeightsGenerator\AllZeros.cs" />
    <Compile Include="NeuralNets\BlockType\MultyLayerPerceptron\Factory\WeightsGenerator\BestActiveZone.cs" />
    <Compile Include="NeuralNets\BlockType\MultyLayerPerceptron\Factory\WeightsGenerator\IMlpWeightGenerator.cs" />
    <Compile Include="NeuralNets\BlockType\MultyLayerPerceptron\Factory\WeightsGenerator\ImprovedBestActiveZone.cs" />
    <Compile Include="NeuralNets\BlockType\MultyLayerPerceptron\TrainMethods\FitnessFunctionOnDistribution.cs" />
    <Compile Include="NeuralNets\BlockType\MultyLayerPerceptron\Factory\Factory.cs" />
    <Compile Include="NeuralNets\BlockType\MultyLayerPerceptron\MultyLayerPerceptron.cs" />
    <Compile Include="NeuralNets\BlockType\MultyLayerPerceptron\TrainMethods\BackPropagationAlgorithm.cs" />
    <Compile Include="NeuralNets\BlockType\MultyLayerPerceptron\TrainMethods\GeneticAlgorithmTrainOnDistribution.cs" />
    <Compile Include="NeuralNets\BlockType\NeuralNetBlocks\BaseNeuralBlock.cs" />
    <Compile Include="NeuralNets\RestrictedBoltzmannMachine\ClassificationRbm\Factory\Factory.cs" />
    <Compile Include="NeuralNets\RestrictedBoltzmannMachine\GenerativeRbm\Factory\RbmType.cs" />
    <Compile Include="NeuralNets\RestrictedBoltzmannMachine\GenerativeRbm\Factory\Factory.cs" />
    <Compile Include="NeuralNets\RestrictedBoltzmannMachine\GenerativeRbm\NeuralNet\BinaryBinaryRbm.cs" />
    <Compile Include="NeuralNets\RestrictedBoltzmannMachine\GenerativeRbm\NeuralNet\BinaryNreluRbm.cs" />
    <Compile Include="NeuralNets\RestrictedBoltzmannMachine\ClassificationRbm\NeuralNet\ClassificationRbm.cs" />
    <Compile Include="NeuralNets\RestrictedBoltzmannMachine\GenerativeRbm\NeuralNet\GaussianBinaryRbm.cs" />
    <Compile Include="NeuralNets\RestrictedBoltzmannMachine\GenerativeRbm\NeuralNet\GaussianNreluRbm.cs" />
    <Compile Include="NeuralNets\RestrictedBoltzmannMachine\GenerativeRbm\NeuralNet\ReluNreluRbm.cs" />
    <Compile Include="NeuralNets\RestrictedBoltzmannMachine\GenerativeRbm\NeuralNet\RestrictedBoltzmannMachine.cs" />
    <Compile Include="NeuralNets\RestrictedBoltzmannMachine\ClassificationRbm\TrainMethods\DiscriminativeTrainMethod.cs" />
    <Compile Include="NeuralNets\RestrictedBoltzmannMachine\ClassificationRbm\TrainMethods\GenerativeTrainMethod.cs" />
    <Compile Include="NeuralNets\RestrictedBoltzmannMachine\GenerativeRbm\TrainMethods\ContrastiveDivergence.cs" />
    <Compile Include="NeuralNets\RestrictedBoltzmannMachine\GenerativeRbm\TrainMethods\FastPersistentContrastiveDivergence.cs" />
    <Compile Include="NeuralNets\RestrictedBoltzmannMachine\GenerativeRbm\TrainMethods\Gradients\CenteredGradient.cs" />
    <Compile Include="NeuralNets\RestrictedBoltzmannMachine\GenerativeRbm\TrainMethods\Gradients\EnhancedGradient.cs" />
    <Compile Include="NeuralNets\RestrictedBoltzmannMachine\GenerativeRbm\TrainMethods\Gradients\GradientFunction.cs" />
    <Compile Include="NeuralNets\RestrictedBoltzmannMachine\GenerativeRbm\TrainMethods\Gradients\IGradientFunction.cs" />
    <Compile Include="NeuralNets\RestrictedBoltzmannMachine\GenerativeRbm\TrainMethods\Gradients\LinearGradient.cs" />
    <Compile Include="NeuralNets\RestrictedBoltzmannMachine\GenerativeRbm\TrainMethods\Gradients\RbmGradients.cs" />
    <Compile Include="NeuralNets\RestrictedBoltzmannMachine\GenerativeRbm\TrainMethods\RbmTrainMethod.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="RegularizationFunctions\Elimination.cs" />
    <Compile Include="RegularizationFunctions\Regularization.cs" />
    <Compile Include="RegularizationFunctions\L1.cs" />
    <Compile Include="RegularizationFunctions\L2.cs" />
    <Compile Include="RegularizationFunctions\NoRegularization.cs" />
    <Compile Include="Train\LeanFactorStrategy\ConstantFactor.cs" />
    <Compile Include="Train\LeanFactorStrategy\ILearnFactorStrategy.cs" />
    <Compile Include="Train\ITrainMethod.cs" />
    <Compile Include="Train\ITrainProperties.cs" />
    <Compile Include="Train\LeanFactorStrategy\LinearFactor.cs" />
    <Compile Include="Train\LeanFactorStrategy\ReverseFactor.cs" />
    <Compile Include="Train\LeanFactorStrategy\SqrtReverseFactor.cs" />
    <Compile Include="Train\TrainMethod.cs" />
    <Compile Include="Train\TrainProperties.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\GeneticAlgorithm\GeneticAlgorithm.csproj">
      <Project>{3CAC5360-1E38-4486-86F1-75C8E7B5E389}</Project>
      <Name>GeneticAlgorithm %28MachineLearning\Managed\GeneticAlgorithm%29</Name>
    </ProjectReference>
    <ProjectReference Include="..\StandardTypes\StandardTypes.csproj">
      <Project>{CFF5C8B3-B878-4C8B-957A-647C1FD9CA08}</Project>
      <Name>StandardTypes</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>